/** 作者: ludan
 *  时间: 2020-01-13 17:52:30
 *  修改者:  ludan
 *  最后修改人: 2020-01-13 17:52:30 
 *  开发模块：nodeJS 使用过程，线程等等操作。 
 *  说明： 
 */

// 1. 使⽤过的koa2中间件
答：koa-compose 如果要将多个中间件合并成单一中间件,方便重用和导出，可以用koa-compose;
    koa-bodyparser 可以把POST的参数解析到ctx.request.body中。如果熟悉Express的话会发现是一样的。
    koa-router 我们可以直接使用get和post来定位并且减少代码量
    koa-static和koa-view 它是用来加载静态资源 / 模板文件列入ejs


// 2. koa-body原理
答：



// 3. 介绍⾃⼰写过的中间件
答：
const test = (ctx) => { 
    console.log('-----------数据劫持------------')
}

modules.exports = function() { // 导出一个组价
    return async function(ctx, next) {
        test(ctx);
        await next();
    }
}
const koa = require('koa');
const app = new koa();
const test = require('./test.js');
app.use(test());



// 4. 有没有涉及到Cluster
答：

// 5. 介绍pm2
// 6. master挂了的话pm2怎么处理
// 7. 如何和MySQL进⾏通信
// 8. React声明周期及⾃⼰的理解
// 9. 如何配置React-Router
// 10. 路由的动态加载模块
// 11. 服务端渲染SSR
// 12. 介绍路由的history
// 13. 介绍Redux数据流的流程
// 14. Redux如何实现多个组件之间的通信，多个组件使⽤相同状态如何进⾏管理
// 15. 多个组件之间如何拆分各⾃的state，每块⼩的组件有⾃⼰的状态，它们之间还有⼀些公共的状态需要维护，如何思考这块
// 16. 使⽤过的Redux中间件
// 17. 如何解决跨域的问题
// 18. 常⻅Http请求头
// 19. 移动端适配1px的问题
// 20. 介绍flex布局
// 21. 其他css⽅式设置垂直居中
// 1、 line-height: 100px; height: 100px; font-size: 18px
// 2、display: flex; fle



// 22. 居中为什么要使⽤transform（为什么不使⽤marginLeft/Top）
// 23. 使⽤过webpack⾥⾯哪些plugin和loader
// 24. webpack⾥⾯的插件是怎么实现的
// 25. dev-server是怎么跑起来
// 26. 项⽬优化

// 27. 抽取公共⽂件是怎么配置的

// 28. 项⽬中如何处理安全问题
// xss：

// csrf:





// 29. 怎么实现this对象的深拷⻉
function deepCopy(obj) {
    const result = {};
    for (var key in obj) {
        if(Object.prototype.hasOwnProperty.call(obj, key)) {
            if (typeof obj[key] === 'object') {
                result[key] = deepCopy(obj[key])
            } else {
                result[key] = obj[key];
            }
        }
    }
    return result;
}